#!/bin/bash

# SDL_ffmpeg - Arjan Houben - 2008

NAME=SDL_ffmpeg
FFMPEGOBJECTS=
LIBAVFORMAT=
LIBAVCODEC=
LIBAVUTIL=
STATIC=
DEBUG=
LIBRARY=
PREFIX=/usr/
BINDIR=bin/
LIBDIR=lib/
SRCDIR=src/
INCDIR=include/
OBJDIR=obj/
CFLAGS=-I$INCDIR
LDFLAGS=-L$LIBDIR
FFMPEGLIBS=-lavformat\ -lavcodec\ -lavutil
BINEXTENSION=
LIBEXTENSION=
LIBPREFIX=
DYNLIBEXTENSION=
DYNLIBPREFIX=
CC=gcc
AR=ar

echo

PROF=no
OPTI=yes
NOSTRIP=no

# read command line arguments
for i in $@;
do
	if [ `echo "$i" | grep "\-\-sdl\-include="` ]
	then
		CFLAGS=$CFLAGS" -I"${i/--sdl-include=/};
	fi
	
	if [ `echo "$i" | grep "\-\-sdl\-lib="` ]
	then
		LDFLAGS=$LDFLAGS" -L"${i/--sdl-lib=/};
	fi
	
	if [ `echo "$i" | grep "\-\-avformat\-include="` ]
	then
		AVFORMATINCLUDE=${i/--avformat-include=/};
		CFLAGS=$CFLAGS" -I"$AVFORMATINCLUDE
	fi
	
	if [ `echo "$i" | grep "\-\-avformat\-lib="` ]
	then
		LIBAVFORMAT=${i/--avformat\-lib=/};
		LDFLAGS=$LDFLAGS\ -L$LIBAVFORMAT
	fi
	
	if [ `echo "$i" | grep "\-\-avcodec\-lib="` ]
	then
		LIBAVCODEC=${i/--avcodec-lib=/};
		LDFLAGS=$LDFLAGS\ -L$LIBAVCODEC
	fi
	
	if [ `echo "$i" | grep "\-\-avutil\-lib="` ]
	then
		LIBAVUTIL=${i/--avutil-lib=/};
		LDFLAGS=$LDFLAGS\ -L$LIBAVUTIL
	fi
	
	if [ `echo "$i" | grep "\-\-static="` ]
	then
		STATIC=${i/--static=/};
	fi
	
	if [ `echo "$i" | grep "\-\-debug="` ]
	then
		DEBUG=${i/--debug=/};
	fi
	
	if [ `echo "$i" | grep "\-\-optimization="` ]
	then
		OPTI=${i/--optimization=/};
	fi
	
	if [ `echo "$i" | grep "\-\-disable\-stripping="` ]
	then
		NOSTRIP=${i/--disable-stripping=/};
	fi
	
	if [ `echo "$i" | grep "\-\-enable\-profiling="` ]
	then
		PROF=${i/--enable-profiling=/};
	fi
	
	if [ `echo "$i" | grep "\-\-prefix="` ]
	then
		PREFIX=${i/--prefix=/};
	fi
done

if [ "$DEBUG" = "yes" ]
then
	DEBUGNAME=d
	CFLAGS="$CFLAGS -g -ggdb"
else
	DEBUGNAME=
fi

if [ $OPTI = "yes" ]
then
	CFLAGS=$CFLAGS\ -O2
fi

if [ $NOSTRIP = "no" ] && [ -z DEBUGNAME ] && [ `uname` != "Darwin" ]
then
	CFLAGS=$CFLAGS\ -s
fi

if [ $PROF = "yes" ]
then
	CFLAGS=$CFLAGS\ -pg
fi

# set linux specific flags
if [ `uname | grep Linux` ]
then
	LDFLAGS=$LDFLAGS\ -L$LIBDIR\ -lSDL\ -lSDLmain\ -lz
	FFMPEGLIBS=-shared\ $FFMPEGLIBS
	BINEXTENSION=
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.so
	DYNLIBPREFIX=lib
fi

# set WIN32 mingw specific flags
if [ `uname | grep MINGW` ] || [ `uname | grep windows` ]
then
	LDFLAGS=$LDFLAGS\ -lmingw32\ -lSDLmain\ -lSDL\ -lwsock32
	BINEXTENSION=.exe
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.dll
	DYNLIBPREFIX=
	FFMPEGLIBS=-shared\ -Wl,--output-def,$LIBDIR$NAME$DEBUGNAME.def,--out-implib,$LIBDIR$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION\ $FFMPEGLIBS
fi

# set OSX specific flags
if [ `uname` = "Darwin" ]
then
	LDFLAGS=$LDFLAGS\ -framework\ Cocoa\ -lbz2\ -lz
	FFMPEGLIBS=$LDFLAGS\ -dynamiclib\ -mdynamic-no-pic\ $FFMPEGLIBS
	ESOURCE=include/SDL/SDLMain.m
	BINEXTENSION=
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.dylib
	DYNLIBPREFIX=lib
	# for now, force static libraries on OSX
	STATIC=yes
fi


if [ "$STATIC" = "yes" ]
then
	LIBRARY=$LIBDIR$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION
	LIBFILE=$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION
else
	LIBRARY=$LIBDIR$DYNLIBPREFIX$NAME$DEBUGNAME$DYNLIBEXTENSION
	LIBFILE=$DYNLIBPREFIX$NAME$DEBUGNAME$DYNLIBEXTENSION
fi


# check for existence of SDL include
cat > temp.c << EOF
#include "SDL/SDL.h"
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -c $CFLAGS temp.c -o temp > config.log
$CC -c $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	# try to use sdl-config
	if [ `sdl-config --version 2> /dev/null` ]
	then
		CFLAGS=$CFLAGS" "`sdl-config --cflags`
		# try again with added commands
		echo $CC -c $CFLAGS temp.c -o temp > config.log
		$CC -c $CFLAGS temp.c -o temp 2> temp.log
		if [ -s temp.log ]
		then
			echo "sdl-config found, but it did not provide a valid include directory."
			echo "please update sdl-config or specify the correct include dir"
				echo
				echo "example:"
				echo "$0 --sdl-include=/usr/local/include/"
				echo
			exit -1
		fi
	else
		echo "SDL include directory and sdl-config could not be found, please install SDL"
		echo "If SDL is installed, please specify where the include dir can be found"
		echo
		echo "example:"
		echo "$0 --sdl-include=/usr/local/include/"
		echo
		echo "Alternatively you could make sure that sdl-config is up to date and installed"
		echo
		exit -1
	fi
fi
# use the same file to check for availability of libraries
echo $CC $CFLAGS $LDFLAGS temp.c -o temp > config.log
$CC $CFLAGS $LDFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	# try to use sdl-config
	if [ `sdl-config --version 2> /dev/null` ]
	then
		LDFLAGS=$LDFLAGS" "`sdl-config --libs`
		# try again with added commands
		echo $CC $CFLAGS $LDFLAGS temp.c -o temp > config.log
		$CC $CFLAGS $LDFLAGS temp.c -o temp 2> temp.log
		if [ -s temp.log ]
		then
			echo "sdl-config found, but it did not provide a valid library directory."
			echo "please update sdl-config or specify the correct library dir"
				echo
				echo "example:"
				echo "$0 --sdl-lib=/usr/local/lib/"
				echo
			exit -1
		fi
	else
		echo "SDL lib directory and sdl-config could not be found, please install SDL"
		echo "If SDL is installed, please specify where the library dir can be found"
		echo
		echo "example:"
		echo "$0 --sdl-lib=/usr/local/lib/"
		echo
		echo "Alternatively you could make sure that sdl-config is up to date and installed"
				echo
		exit -1
	fi
fi

# check for existence of avformat include
cat > temp.c << EOF
#include "libavformat/avformat.h"
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -c $CFLAGS temp.c -o temp > config.log
$CC -c $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	echo "avformat directory could not be found, please install libavformat"
	echo "If libavformat is installed, please specify where it can be found"
	echo "example:"
	echo "$0 --avformat-include=/usr/local/include/"
	exit -1
fi

if [ -d $AVFORMATINCLUDE/libavformat ]
then
	CFLAGS=$CFLAGS" -I"$AVFORMATINCLUDE/libavformat
fi

if [ -d $AVFORMATINCLUDE/libavcodec ]
then
	CFLAGS=$CFLAGS" -I"$AVFORMATINCLUDE/libavcodec
fi

if [ -d $AVFORMATINCLUDE/libavutil ]
then
	CFLAGS=$CFLAGS" -I"$AVFORMATINCLUDE/libavutil
fi

# check for existence of avformat library
cat > temp.c << EOF
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -lavformat $LDFLAGS $CFLAGS temp.c -o temp > config.log
$CC -lavformat $LDFLAGS $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	echo "avformat library could not be found, please install libavformat"
	echo "If libavformat is installed, please specify where it can be found"
	echo "example:"
	echo "$0 --avformat-lib=/usr/local/lib/"
	exit -1
fi
	
# check for existence of avcodec library
cat > temp.c << EOF
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -lavcodec $LDFLAGS $CFLAGS temp.c -o temp > config.log
$CC -lavcodec $LDFLAGS $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	echo "avcodec library could not be found, please install libavcodec"
	echo "If libavformat is installed, please specify where it can be found"
	echo "example:"
	echo "$0 --avcodec-lib=/usr/local/lib/"
	exit -1
fi

# check for existence of avutil library
cat > temp.c << EOF
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -lavutil $LDFLAGS $CFLAGS temp.c -o temp > config.log
$CC -lavutil $LDFLAGS $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	echo "avutil library could not be found, please install libavutil"
	echo "If libavutil is installed, please specify where it can be found"
	echo "example:"
	echo "$0 --avutil-lib=/usr/local/lib/"
	exit -1
fi

# write Makefile.include file
cat > Makefile.include << EOF
NAME=$NAME
LIBNAME=$NAME$DEBUGNAME
LIBAVFORMAT=$LIBAVFORMAT
LIBAVCODEC=$LIBAVCODEC
LIBAVUTIL=$LIBAVUTIL
LIBRARY=$LIBRARY
PREFIX=$PREFIX
BINDIR=$BINDIR
LIBDIR=$LIBDIR
SRCDIR=$SRCDIR
INCDIR=$INCDIR
OBJDIR=$OBJDIR
CFLAGS=$CFLAGS
LDFLAGS=$LDFLAGS
FFMPEGLIBS=$FFMPEGLIBS
BINEXTENSION=$BINEXTENSION
LIBEXTENSION=$LIBEXTENSION
LIBPREFIX=$LIBPREFIX
DYNLIBEXTENSION=$DYNLIBEXTENSION
DYNLIBPREFIX=$DYNLIBPREFIX
DEBUGNAME=$DEBUGNAME
CC=$CC
AR=$AR
EOF

# remove temporary items
rm temp
rm temp.c
rm temp.log
rm config.log

echo "Makefile set up to produce the following library: $LIBFILE"
echo
if [ "$STATIC" = "yes" ]
then
	echo "Library type: static"
else
	echo "Library type: dynamic"
fi
if [ $OPTI = "yes" ]
then
	echo "The library will be compiled with optimazation level: -O2"
fi
if [ $DEBUGNAME ]
then
	echo "The library will be compiled with debugging symbols"
else
	if [ $NOSTRIP = "no" ]
	then
		echo "The symbols will be stripped from the library"
	fi
fi
echo
echo "The library will be installed at "$PREFIX"lib/"
echo "And the header will be located at "$PREFIX"include/SDL/"
echo
echo "To compile the library, execute 'make' in the current directory"
echo
