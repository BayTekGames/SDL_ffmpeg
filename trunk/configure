#!/bin/bash

# SDL_ffmpeg - Arjan Houben - 2008

NAME=SDL_ffmpeg
FFMPEGOBJECTS=
LIBAVFORMAT=
LIBAVCODEC=
LIBAVUTIL=
STATIC=
DEBUG=
LIBRARY=
BINDIR=bin/
LIBDIR=lib/
SRCDIR=src/
INCDIR=include/
OBJDIR=obj/
CFLAGS=-I$INCDIR
LDFLAGS=-L$LIBDIR
LIBFLAGS=
BINEXTENSION=
LIBEXTENSION=
LIBPREFIX=
DYNLIBEXTENSION=
DYNLIBPREFIX=
CC=gcc
AR=ar

echo

PROF=no
OPTI=yes
NOSTRIP=no

# read command line arguments
for i in $@;
do
	if [ `echo "$i" | grep "\-\-sdl\-include="` ]
	then
		CFLAGS=$CFLAGS" -I"${i/--sdl-include=/};
	fi
	
	if [ `echo "$i" | grep "\-\-sdl\-lib="` ]
	then
		LDFLAGS=$LDFLAGS" -L"${i/--sdl-lib=/};
	fi
	
	if [ `echo "$i" | grep "\-\-avformat\-include="` ]
	then
		AVFORMATINCLUDE=${i/--avformat-include=/};
		CFLAGS=$CFLAGS" -I"$AVFORMATINCLUDE
	fi
	
	if [ `echo "$i" | grep "\-\-avformat\-lib="` ]
	then
		LIBAVFORMAT=${i/--avformat\-lib=/};
	fi
	
	if [ `echo "$i" | grep "\-\-avcodec\-lib="` ]
	then
		LIBAVCODEC=${i/--avcodec-lib=/};
	fi
	
	if [ `echo "$i" | grep "\-\-avutil\-lib="` ]
	then
		LIBAVUTIL=${i/--avutil-lib=/};
	fi
	
	if [ `echo "$i" | grep "\-\-static="` ]
	then
		STATIC=${i/--static=/};
	fi
	
	if [ `echo "$i" | grep "\-\-debug="` ]
	then
		DEBUG=${i/--debug=/};
	fi
	
	if [ `echo "$i" | grep "\-\-optimization="` ]
	then
		OPTI=${i/--optimization=/};
	fi
	
	if [ `echo "$i" | grep "\-\-disable\-stripping="` ]
	then
		NOSTRIP=${i/--disable-stripping=/};
	fi
	
	if [ `echo "$i" | grep "\-\-enable\-profiling="` ]
	then
		PROF=${i/--enable-profiling=/};
	fi
done

if [ "$DEBUG" = "yes" ]
then
	DEBUGNAME=d
	CFLAGS="$CFLAGS -g -ggdb"
else
	DEBUGNAME=
fi

if [ $OPTI = "yes" ]
then
	CFLAGS=$CFLAGS\ -O2
fi

if [ $NOSTRIP = "no" ] && [ -z DEBUGNAME ] && [ `uname` != "Darwin" ]
then
	CFLAGS=$CFLAGS\ -s
fi

if [ $PROF = "yes" ]
then
	CFLAGS=$CFLAGS\ -pg
fi

# set linux specific flags
if [ `uname | grep Linux` ]
then
	LDFLAGS=$LDFLAGS\ -L$LIBDIR\ -lSDL\ -lSDLmain\ -lz
	LIBFLAGS=$LIBFLAGS\ -shared
	BINEXTENSION=
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.so
	DYNLIBPREFIX=lib
fi

# set WIN32 mingw specific flags
if [ `uname | grep MINGW` ]
then
	LDFLAGS=$LDFLAGS\ -lmingw32\ -lSDLmain\ -lSDL\ -lwsock32
	BINEXTENSION=.exe
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.dll
	DYNLIBPREFIX=
	LIBFLAGS=$LIBFLAGS\ -shared\ -Wl,--output-def,$LIBDIR$NAME$DEBUGNAME.def,--out-implib,$LIBDIR$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION
fi

# set OSX specific flags
if [ `uname` = "Darwin" ]
then
	LDFLAGS=$LDFLAGS\ -framework\ Cocoa\ -lbz2\ -lz
	LIBFLAGS=$LDFLAGS\ -dynamiclib\ -mdynamic-no-pic
	ESOURCE=include/SDL/SDLMain.m
	BINEXTENSION=
	LIBEXTENSION=.a
	LIBPREFIX=lib
	DYNLIBEXTENSION=.dylib
	DYNLIBPREFIX=lib
	# for now, force static libraries on OSX
	STATIC=yes
fi


if [ "$STATIC" = "yes" ]
then
	LIBRARY=$LIBDIR$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION
	LIBFILE=$LIBPREFIX$NAME$DEBUGNAME$LIBEXTENSION
else
	LIBRARY=$LIBDIR$DYNLIBPREFIX$NAME$DEBUGNAME$DYNLIBEXTENSION
	LIBFILE=$DYNLIBPREFIX$NAME$DEBUGNAME$DYNLIBEXTENSION
fi


# check for existence of SDL include
cat > temp.c << EOF
#include "SDL/SDL.h"
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -c $CFLAGS temp.c -o temp > config.log
$CC -c $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	# try to use sdl-config
	if [ `sdl-config --version 2> /dev/null` ]
	then
		CFLAGS=$CFLAGS" "`sdl-config --cflags`
		# try again with added commands
		echo $CC -c $CFLAGS temp.c -o temp > config.log
		$CC -c $CFLAGS temp.c -o temp 2> temp.log
		if [ -s temp.log ]
		then
			echo "sdl-config found, but it did not provide a valid include directory."
			echo "please update sdl-config or specify the correct include dir"
				echo
				echo "example:"
				echo "$0 --sdl-include=/usr/local/include/"
				echo
			exit -1
		fi
	else
		echo "SDL include directory and sdl-config could not be found, please install SDL"
		echo "If SDL is installed, please specify where the include dir can be found"
		echo
		echo "example:"
		echo "$0 --sdl-include=/usr/local/include/"
		echo
		echo "Alternatively you could make sure that sdl-config is up to date and installed"
		echo
		exit -1
	fi
fi
# use the same file to check for availability of libraries
echo $CC $CFLAGS $LDFLAGS temp.c -o temp > config.log
$CC $CFLAGS $LDFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	# try to use sdl-config
	if [ `sdl-config --version 2> /dev/null` ]
	then
		LDFLAGS=$LDFLAGS" "`sdl-config --libs`
		# try again with added commands
		echo $CC $CFLAGS $LDFLAGS temp.c -o temp > config.log
		$CC $CFLAGS $LDFLAGS temp.c -o temp 2> temp.log
		if [ -s temp.log ]
		then
			echo "sdl-config found, but it did not provide a valid library directory."
			echo "please update sdl-config or specify the correct library dir"
				echo
				echo "example:"
				echo "$0 --sdl-lib=/usr/local/lib/"
				echo
			exit -1
		fi
	else
		echo "SDL lib directory and sdl-config could not be found, please install SDL"
		echo "If SDL is installed, please specify where the library dir can be found"
		echo
		echo "example:"
		echo "$0 --sdl-lib=/usr/local/lib/"
		echo
		echo "Alternatively you could make sure that sdl-config is up to date and installed"
				echo
		exit -1
	fi
fi

# check for existence of avformat include
cat > temp.c << EOF
#include "libavformat/avformat.h"
int main(int argc,char **argv) {
	return 0;
}
EOF
echo $CC -c $CFLAGS temp.c -o temp > config.log
$CC -c $CFLAGS temp.c -o temp 2> temp.log
if [ -s temp.log ]
then
	echo "avformat directory could not be found, please install libavformat"
	echo "If libavformat is installed, please specify where it can be found"
	echo "example:"
	echo "$0 --avformat-include=/usr/local/include/"
	exit -1
fi


# try to find libavformat.a
if [ -z $LIBAVFORMAT ]
then
	echo "no --avformat-lib specified, trying to find libavformat.a..."
	LIBAVFORMAT=$(find /usr/ $AVFORMATINCLUDE -name libavformat.a 2> /dev/null)
	if [ -z $LIBAVFORMAT ]
	then
		echo "No instance of libavformat.a found. please install libavformat"
		echo "If libavformat is installed, please specify where it can be found"
		echo "example:"
		echo "$0 --avformat-lib=/usr/local/lib/libavformat.a"
		exit -1
	fi
else
	echo aap; $LIBAVFORMAT
fi

# libavformat.a found
echo "libavformat.a found"
echo "using \"$LIBAVFORMAT\""
echo

# prepare libavformat objects
mkdir obj 2> /dev/null
mkdir obj/libavformat 2> /dev/null
cd obj/libavformat && ar -x $LIBAVFORMAT && cd ../../
for i in obj/libavformat/*.o;
do
	FFMPEGOBJECTS=$FFMPEGOBJECTS" $i"
done


# try to find libavcodec.a
if [ -z $LIBAVCODEC ]
then
	echo "no --avcodec-lib specified, trying to find libavcodec.a..."
	LIBAVCODEC=$(find /usr/ $AVFORMATINCLUDE -name libavcodec.a 2> /dev/null)
	if [ -z $LIBAVCODEC ]
	then
		echo "No instance of libavcodec.a found. please install libavcodec"
		echo "If libavcodec is installed, please specify where it can be found"
		echo "example:"
		echo "$0 --avcodec-lib=/usr/local/lib/libavcodec.a"
		exit -1
	fi
fi

# libavcodec.a found
echo "libavcodec.a found"
echo "using \"$LIBAVCODEC\""
echo

# prepare libavcodec objects
mkdir obj/libavcodec 2> /dev/null
cd obj/libavcodec && ar -x $LIBAVCODEC && cd ../../
for i in obj/libavcodec/*.o;
do
	FFMPEGOBJECTS=$FFMPEGOBJECTS" $i"
done


# try to find libavutil.a
if [ -z $LIBAVUTIL ]
then
	echo "no --avutil-lib specified, trying to find libavutil.a..."
	LIBAVUTIL=$(find /usr/ $AVFORMATINCLUDE -name libavutil.a 2> /dev/null)
	if [ -z $LIBAVUTIL ]
	then
		echo "No instance of libavutil.a found. please install libavutil"
		echo "If libavutil is installed, please specify where it can be found"
		echo "example:"
		echo "$0 --avutil-lib=/usr/local/lib/libavutil.a"
		exit -1
	fi
fi

# libavutil.a found
echo "libavutil.a found"
echo "using \"$LIBAVUTIL\""
echo

# prepare libavutil objects
mkdir obj/libavutil 2> /dev/null
cd obj/libavutil && ar -x $LIBAVUTIL && cd ../../
for i in obj/libavutil/*.o;
do
	FFMPEGOBJECTS=$FFMPEGOBJECTS" $i"
done

# write Makefile.include file
cat > Makefile.include << EOF
NAME=$NAME
LIBNAME=$NAME$DEBUGNAME
FFMPEGOBJECTS=$FFMPEGOBJECTS
LIBRARY=$LIBRARY
BINDIR=$BINDIR
LIBDIR=$LIBDIR
SRCDIR=$SRCDIR
INCDIR=$INCDIR
OBJDIR=$OBJDIR
CFLAGS=$CFLAGS
LDFLAGS=$LDFLAGS
LIBFLAGS=$LIBFLAGS
BINEXTENSION=$BINEXTENSION
LIBEXTENSION=$LIBEXTENSION
LIBPREFIX=$LIBPREFIX
DYNLIBEXTENSION=$DYNLIBEXTENSION
DYNLIBPREFIX=$DYNLIBPREFIX
DEBUGNAME=$DEBUGNAME
CC=$CC
AR=$AR
EOF

# remove temporary items
rm temp
rm temp.c
rm temp.log
rm config.log

echo "Makefile set up to produce the following library: $LIBFILE"
echo
if [ "$STATIC" = "yes" ]
then
	echo "Library type: static"
else
	echo "Library type: dynamic"
fi
if [ $OPTI = "yes" ]
then
	echo "The library will be compiled with optimazation level: -O2"
fi
if [ $DEBUGNAME ]
then
	echo "The library will be compiled with debugging symbols"
else
	if [ $NOSTRIP = "no" ]
	then
		echo "The symbols will be stripped from the library"
	fi
fi
echo
echo "To compile the library, execute 'make' in the current directory"
echo
